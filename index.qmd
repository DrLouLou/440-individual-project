---
title: 440-individual-project
authors:
  - name: Louis Choo-Choy
    affiliation: Duke University
    roles: writing
    corresponding: true
bibliography: references.bib
---

## Packages

```{r}
library(tidyverse)
library(sf)
library(dplyr)
library(knitr)
library(viridis)
library(spdep)  
library(ggplot2)
library(spatialreg)
library(interactions)
library(broom)
library(MASS)
```

## Introduction and Data

```{r}
resident_survey <- read_csv("data/resident_survey.csv")
```

## Cleaning

```{r}
resident_survey_cleaned <- resident_survey %>% 
  filter(!is.na(`Block Lon`), !is.na(`Block Lat`)) %>% 
  # convert micro-degrees to degrees
  mutate(
    Lon = `Block Lon` / 1e6,
    Lat = `Block Lat` / 1e6
  ) %>% 
  st_as_sf(coords = c("Lon","Lat"), crs = 4326) 

```

```{r}
resident_survey_cleaned <- resident_survey_cleaned %>% 
  rename(
    years_live_durham = `Q27  Approximately how many years have y`,
    own_rent           = `Q30  Do you own or rent your current res`,
    qol_satisfaction   = `Q3[06]  [6  Overall quality of life in D`,
    age                = `Q28  What is your age?`,
    gender             = `Q29  What is your gender?`,
    hispanic           = `Q31  Are you of Hispanic  Latino  or oth`,
    income             = `Q33  Would you say your total annual hou`,
    inside_city        = `Inside City of Durham`
  )
```

```{r}
resident_survey_cleaned <- resident_survey_cleaned %>%
  mutate(
    own_rent        = factor(own_rent,      levels=c(1,2), labels=c("Own","Rent")),
    qol_satisfaction= as.numeric(as.character(qol_satisfaction)),
    gender          = factor(gender),
    hispanic        = factor(hispanic,      levels=c(1,2), labels=c("Yes","No")),
    income          = factor(income),
    inside_city     = factor(inside_city,   levels=c("NO","YES")),
    race_black      = as.numeric(`Q32[02]  [Black or African American]`==1),
    race_white      = as.numeric(`Q32[04]  [White]`==1),
    race_asian      = as.numeric(`Q32[01]  [Asian or Asian Indian]`==1),
    race_other      = as.numeric(`Q32[06]  [Other]`==1)
  )
```

```{r}
durham_cnty <- st_read("data/Durham_County_boundary/Durham_County_Boundary.shp")
```

## Exploratory Data Analysis

```{r}
# Exploratory Point Map for Mean Satisfaction
bb         <- st_bbox(resident_survey_cleaned)
lon_breaks <- seq(round(bb["xmin"],  2), round(bb["xmax"],  2), length.out = 6)
lat_breaks <- seq(round(bb["ymin"],  2), round(bb["ymax"],  2), length.out = 6)

ggplot() +
  geom_sf(
    data = durham_cnty,
    fill  = "grey95",
    color = "grey40",
    size  = 0.5
  ) +
  geom_sf(
    data = resident_survey_cleaned,
    aes(color = qol_satisfaction),
    size = 1.2
  ) +
  scale_color_viridis_c(name = "QOL Satisfaction") +
  coord_sf() +
  scale_x_continuous(
    name   = "Longitude",
    breaks = lon_breaks,
    oob    = scales::oob_keep
  ) +
  scale_y_continuous(
    name   = "Latitude",
    breaks = lat_breaks,
    oob    = scales::oob_keep
  ) +
  labs(title = "Durham County + Survey Respondent Satisfaction") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title  = element_text(size = 10),
    plot.title  = element_text(face = "bold", hjust = 0.5)
  )
```

```{r}
# Exploratory Point Map for Years Lived in Durham
bb <- st_bbox(resident_survey_cleaned)
lon_breaks <- seq(round(bb["xmin"],  2), round(bb["xmax"],  2), length.out = 6)
lat_breaks <- seq(round(bb["ymin"],  2), round(bb["ymax"],  2), length.out = 6)

ggplot() +
  geom_sf(
    data = durham_cnty,
    fill  = "grey95",
    color = "grey40",
    size  = 0.5
  ) +
  geom_sf(
    data = resident_survey_cleaned,
    aes(color = years_live_durham),
    size = 1.2
  ) +
  scale_color_viridis_c(name = "Years Lived in Durham") +
  coord_sf() +
  scale_x_continuous(
    name   = "Longitude",
    breaks = lon_breaks,
    oob    = scales::oob_keep
  ) +
  scale_y_continuous(
    name   = "Latitude",
    breaks = lat_breaks,
    oob    = scales::oob_keep
  ) +
  labs(title = "Durham County + Years Lived in Durham") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title  = element_text(size = 10),
    plot.title  = element_text(face = "bold", hjust = 0.5)
  )
```

```{r}
# Exploratory Point Map for Owners and Renters in Durham
resident_survey_cleaned <- resident_survey_cleaned %>%
  filter(!is.na(own_rent))

bb <- st_bbox(resident_survey_cleaned)
lon_breaks <- seq(round(bb["xmin"], 2), round(bb["xmax"], 2), length.out = 6)
lat_breaks <- seq(round(bb["ymin"], 2), round(bb["ymax"], 2), length.out = 6)

ggplot() +
  geom_sf(
    data = durham_cnty,
    fill  = "grey95",
    color = "grey40",
    size  = 0.5
  ) +
  geom_sf(
    data = resident_survey_cleaned,
    aes(color = own_rent),
    size = 1.2
  ) +
  scale_color_viridis_d(
    name = "Renters or Owners in Durham"
  ) +
  coord_sf() +
  scale_x_continuous(
  breaks = lon_breaks,
  oob    = scales::oob_keep
) +
scale_y_continuous(
  breaks = lat_breaks,
  oob    = scales::oob_keep
) +
  labs(
    title = "Durham County + Renters or Owners in Durham"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title  = element_text(size = 10),
    plot.title  = element_text(face = "bold", hjust = 0.5)
  )

```

## Methodology

```{r}
set.seed(440)  # for reproducibility

# Jitter to break duplicates, build full 6-NN
survey_jit <- resident_survey_cleaned %>% st_jitter(amount = 1e-5)
coords_jit <- st_coordinates(survey_jit)
knn6_full   <- knearneigh(coords_jit, k = 6)
nb_knn_full <- knn2nb(knn6_full)
nb_sym_full <- make.sym.nb(nb_knn_full)
lw_knn_full <- nb2listw(nb_sym_full, style="W")
summary(nb_sym_full)

```

```{r}
model_vars <- c(
  "qol_satisfaction",
  "years_live_durham",
  "own_rent",
  "age",
  "gender",
  "hispanic",
  "income",
  "inside_city"
)
cc_idx_simple <- which(
  complete.cases(
    st_drop_geometry(survey_jit)[, model_vars]
  )
)
survey_cc <- survey_jit[cc_idx_simple, ]

nrow(survey_cc) 

n_cc <- nrow(survey_cc)
k_cc <- min(6, n_cc - 1)
message("Using k = ", k_cc)

coords_cc  <- as.matrix(st_coordinates(survey_cc))
knn_cc     <- knearneigh(coords_cc, k = k_cc)
nb_knn_cc  <- knn2nb(knn_cc)
nb_sym_cc  <- make.sym.nb(nb_knn_cc)
lw_knn_cc  <- nb2listw(nb_sym_cc, style="W")

```

```{r}
# define the full baseline model
full_mod <- lm(
  qol_satisfaction ~ 
    years_live_durham * own_rent +
    age + gender + hispanic + income + inside_city,
  data = survey_cc
)

# run stepwise AIC
best_mod <- stepAIC(full_mod, direction = "both", trace = FALSE)

coef_tbl <- tidy(best_mod) %>%
  dplyr::select(term, estimate, std.error, statistic, p.value) %>%
  dplyr::rename(
    Term        = term,
    Estimate    = estimate,
    `Std. Error`= std.error,
    `t value`   = statistic,
    `Pr(>|t|)`  = p.value
  )

fit_tbl <- glance(best_mod) %>%
  dplyr::select(r.squared, adj.r.squared, AIC, BIC, statistic, p.value, nobs) %>%
  dplyr::rename(
    `R²`            = r.squared,
    `Adj. R²`       = adj.r.squared,
    AIC             = AIC,
    BIC             = BIC,
    `F-statistic`   = statistic,
    `Model p-value` = p.value,
    `N obs`         = nobs
  )

kable(
  coef_tbl,
  digits  = c(0, 3, 3, 2, 3),
  caption = "Coefficients of the Stepwise‐Selected OLS Model"
)

kable(
  fit_tbl,
  digits  = c(3, 3, 1, 1, 2, 3, 0),
  caption = "Overall Fit Statistics for the Stepwise Model"
)

```

```{r}
# Moran’s I on residuals
survey_cc$resid0 <- resid(best_mod)
mi <- moran.test(survey_cc$resid0, lw_knn_cc)

mi_tbl <- tibble(
  `Moran’s I`   = unname(mi$estimate["Moran I statistic"]),
  Expectation   = unname(mi$estimate["Expectation"]),
  Variance      = unname(mi$estimate["Variance"]),
  `Z‐value`     = unname(mi$statistic), 
  `P‐value`     = mi$p.value
)

# print nicely
kable(
  mi_tbl,
  digits   = c(4, 4, 6, 3, 4),
  caption  = "Global Moran’s I on OLS Residuals"
)
```

```{r}
# A) Interaction plot: years_live_durham × own_rent
ggplot(survey_cc, aes(x = years_live_durham, y = qol_satisfaction, color = own_rent)) +
  geom_smooth(method = "lm", se = TRUE) +
  geom_count(alpha = 0.6, show.legend = FALSE) +
  scale_size_area(max_size = 6) +
  scale_color_manual(values = c("Own" = "#1f78b4", "Rent" = "#e31a1c")) +
  labs(
    x     = "Years Lived in Durham",
    y     = "Overall QOL Satisfaction (1–5)",
    color = "Tenure",
    size  = "Number of\nRespondents",
    title = "Interaction of Tenure & Years Lived on QOL"
  ) +
  theme_minimal()

```

```{r}
# B) Residual spatial map
bb <- st_bbox(survey_cc)
lon_breaks <- seq(round(bb["xmin"], 2), round(bb["xmax"], 2), length.out = 6)
lat_breaks <- seq(round(bb["ymin"], 2), round(bb["ymax"], 2), length.out = 6)

ggplot(survey_cc) +
  geom_sf(aes(color = resid0), size = 1) +
  scale_color_gradient2(
    low      = "red",
    mid      = "white",
    high     = "blue",
    midpoint = 0,
    name     = "Residual"
  ) +
  coord_sf() +
  scale_x_continuous(
    name   = "Longitude",
    breaks = lon_breaks
  ) +
  scale_y_continuous(
    name   = "Latitude",
    breaks = lat_breaks
  ) +
  labs(title = "Spatial Distribution of OLS Residuals") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title  = element_text(size = 10),
    plot.title  = element_text(face = "bold", hjust = 0.5)
  )
```

```{r}
# C) Local Moran’s I (LISA) on qol_satisfaction
local_mi     <- localmoran(survey_cc$qol_satisfaction, lw_knn_cc)
survey_cc$local_I <- local_mi[,1]
survey_cc$local_p <- local_mi[,5]
```

```{r}
# Map only significant Local I's at α=0.05
bb <- st_bbox(survey_cc)
lon_breaks <- seq(round(bb["xmin"], 2), round(bb["xmax"], 2), length.out = 6)
lat_breaks <- seq(round(bb["ymin"], 2), round(bb["ymax"], 2), length.out = 6)

ggplot(survey_cc) +
  geom_sf(aes(color = ifelse(local_p < .05, local_I, NA)), size = 1) +
  scale_color_gradient2(
    low      = "purple",
    mid      = "white",
    high     = "green",
    midpoint = 0,
    na.value = "grey90",
    name     = "Local Moran’s I\n(p<0.05)"
  ) +
  coord_sf() +
  scale_x_continuous(
    name   = "Longitude",
    breaks = lon_breaks
  ) +
  scale_y_continuous(
    name   = "Latitude",
    breaks = lat_breaks
  ) +
  labs(title = "Local Clusters of QOL Satisfaction") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title   = element_text(size = 10),
    plot.title   = element_text(face = "bold", hjust = 0.5)
  )

```
